---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/postgresql.cnpg.io/cluster_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: homecluster
spec:
  instances: 3
  imageName: ghcr.io/cloudnative-pg/postgresql:16.1-7
  primaryUpdateStrategy: unsupervised
  storage:
    size: 40Gi
    storageClass: local-path
  superuserSecret:
    name: cloudnative-pg-secret
  enableSuperuserAccess: true
  # Note: Bootstrap is needed when recovering from an existing cnpg cluster
  # bootstrap:
  #   recovery:
  #     source: &previousCluster homecluster
  postgresql:
    parameters:
      max_connections: "600"
      max_slot_wal_keep_size: 10GB
      shared_buffers: 512MB
  resources:
    requests:
      memory: "2Gi"
      cpu: "500m"
    limits:
      memory: "4Gi"
  monitoring:
    enablePodMonitor: true
  backup:
    retentionPolicy: 30d
    barmanObjectStore:
      data:
        compression: bzip2
      wal:
        compression: bzip2
        maxParallel: 8
      destinationPath: s3://databases/
      endpointURL: http://minio.database.svc.cluster.local:9000
      serverName: &currentCluster homecluster
      s3Credentials:
        accessKeyId:
          name: cloudnative-pg-secret
          key: S3_ACCESS_KEY
        secretAccessKey:
          name: cloudnative-pg-secret
          key: S3_ACCESS_SECRET
  # # Note: externalClusters is needed when recovering from an existing cnpg cluster
  # externalClusters:
  #   - name: *previousCluster
  #     barmanObjectStore:
  #       wal:
  #         compression: bzip2
  #         maxParallel: 8
  #       destinationPath: s3://databases/homecluster/
  #       endpointURL: https://s3.bakernet.casa
      # s3Credentials:
      #   accessKeyId:
      #     name: minio-secret
      #     key: MINIO_ROOT_USER
      #   secretAccessKey:
      #     name: minio-secret
      #     key: MINIO_ROOT_PASSWORD
